services:
  postgres:
    image: postgres
    container_name: postgres
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=postgres
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - pgdata:/var/lib/postgresql/data/
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 3
  
  pgbouncer:
    image: public.ecr.aws/bitnami/pgbouncer:1.24.1
    container_name: pgbouncer
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - POSTGRESQL_HOST=postgres
      - POSTGRESQL_PORT=5432
      - POSTGRESQL_USERNAME=user
      - POSTGRESQL_PASSWORD=mypassword
      - PGBOUNCER_IDLE_TRANSACTION_TIMEOUT=60
      - PGBOUNCER_POOL_MODE=transaction
      - PGBOUNCER_SERVER_RESET_QUERY_ALWAYS=0
      - PGBOUNCER_SERVER_LIFETIME=3600
      - PGBOUNCER_SERVER_IDLE_TIMEOUT=60
      - PGBOUNCER_MAX_DB_CONNECTIONS=50
      - PGBOUNCER_MAX_CLIENT_CONN=10000
      - PGBOUNCER_RESERVE_POOL_SIZE=5
      - PGBOUNCER_MIN_POOL_SIZE=2
      - PGBOUNCER_DEFAULT_POOL_SIZE=16
      - PGBOUNCER_IGNORE_STARTUP_PARAMETERS=extra_float_digits
    ports:
      - "15432:6432"
    restart: unless-stopped
      
  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
   
  webapi:
    build:
      context: .
      dockerfile: UniverseLab/Dockerfile
    container_name: webapi
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=pgbouncer;Port=6432;Database=postgres;Username=user;Password=mypassword
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Port=5672
    depends_on:
      - pgbouncer
      - rabbitmq
    restart: unless-stopped
   
  consumer:
    build:
      context: .
      dockerfile: Consumer/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=pgbouncer;Port=6432;Database=postgres;Username=user;Password=mypassword
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Port=5672
    deploy:
      replicas: 5
    depends_on:
      - rabbitmq
      - pgbouncer
    restart: unless-stopped
  
volumes:
  pgdata:
  rabbitmq_data: